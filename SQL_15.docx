修改数据UPDATE

1. 基本语法
UPDATE <表名> SET 字段1=值1, 字段2=值2, ... WHERE ...;

例。
更新students表中id=1的name, score字段。
mysql> UPDATE students SET name='大牛', score=66 WHERE id=1;
ERROR 2006 (HY000): MySQL server has gone away
No connection. Trying to reconnect...
Connection id:    23
Current database: wang

Query OK, 1 row affected (0.30 sec)
Rows matched: 1  Changed: 1  Warnings: 0 ----可以看到，对于MySQL这类真正的关系数据库，UPDATE语句会返回更新的行数 以及 WHERE条件匹配的行数。
mysql> -- 查询并观察结果:
mysql> SELECT * FROM students WHERE id=1;
+----+----------+--------+--------+-------+
| id | class_id | name   | gender | score |
+----+----------+--------+--------+-------+
|  1 |        1 | 大牛   | M      |    66 |
+----+----------+--------+--------+-------+
1 row in set (0.00 sec)

2. 观察注意到:
UPDATE语句的WHERE条件 和 SELECT语句的WHERE条件其实是一样的，因此完全可以一次更新多条记录：
例。
区间条件 下的 更新。-----------------------------------------------------
mysql> UPDATE students SET name='小牛', score=77 WHERE id>=5 AND id<=7;
Query OK, 3 rows affected (0.06 sec)
Rows matched: 3  Changed: 3  Warnings: 0 ----可以看到，对于MySQL这类真正的关系数据库，UPDATE语句会返回更新的行数 以及 WHERE条件匹配的行数。
mysql> -- 查询并观察结果:
mysql> SELECT * FROM students;
+----+----------+--------+--------+-------+
| id | class_id | name   | gender | score |
+----+----------+--------+--------+-------+
|  1 |        1 | 大牛   | M      |    66 |
|  2 |        1 | 小红   | F      |    95 |
|  3 |        1 | 小军   | M      |    88 |
|  4 |        1 | 小米   | F      |    73 |
|  5 |        2 | 小牛   | F      |    77 |
|  6 |        2 | 小牛   | M      |    77 |
|  7 |        2 | 小牛   | M      |    77 |
|  8 |        3 | 小新   | F      |    91 |
|  9 |        3 | 小王   | M      |    89 |
| 10 |        3 | 小丽   | F      |    85 |
| 11 |        5 | 新生   | M      |    88 |
| 12 |        2 | 大牛   | M      |    80 |
| 13 |        1 | 大宝   | M      |    87 |
| 14 |        2 | 二宝   | M      |    81 |
+----+----------+--------+--------+-------+
14 rows in set (0.04 sec)
原有分数基础上+10.-----------------------------------------------------
mysql> UPDATE students SET score=score+10 WHERE score<80;
Query OK, 5 rows affected (0.11 sec)
Rows matched: 5  Changed: 5  Warnings: 0  ----可以看到，对于MySQL这类真正的关系数据库，UPDATE语句会返回更新的行数 以及 WHERE条件匹配的行数。
mysql> -- 查询并观察结果:
mysql> SELECT * FROM students;
+----+----------+--------+--------+-------+
| id | class_id | name   | gender | score |
+----+----------+--------+--------+-------+
|  1 |        1 | 大牛   | M      |    76 |
|  2 |        1 | 小红   | F      |    95 |
|  3 |        1 | 小军   | M      |    88 |
|  4 |        1 | 小米   | F      |    83 |
|  5 |        2 | 小牛   | F      |    87 |
|  6 |        2 | 小牛   | M      |    87 |
|  7 |        2 | 小牛   | M      |    87 |
|  8 |        3 | 小新   | F      |    91 |
|  9 |        3 | 小王   | M      |    89 |
| 10 |        3 | 小丽   | F      |    85 |
| 11 |        5 | 新生   | M      |    88 |
| 12 |        2 | 大牛   | M      |    80 |
| 13 |        1 | 大宝   | M      |    87 |
| 14 |        2 | 二宝   | M      |    81 |
+----+----------+--------+--------+-------+
14 rows in set (0.00 sec)


3. WHERE条件没有匹配的记录时候，UPDATE语句也不会报错，也不会有任何记录被更新。
例子。
mysql> UPDATE students SET score=100 WHERE id=999;
Query OK, 0 rows affected (0.00 sec)
Rows matched: 0  Changed: 0  Warnings: 0 ----可以看到，对于MySQL这类真正的关系数据库，UPDATE语句会返回更新的行数 以及 WHERE条件匹配的行数。
mysql> -- 查询并观察结果:
mysql> SELECT * FROM students;
+----+----------+--------+--------+-------+
| id | class_id | name   | gender | score |
+----+----------+--------+--------+-------+
|  1 |        1 | 大牛   | M      |    66 |
|  2 |        1 | 小红   | F      |    95 |
|  3 |        1 | 小军   | M      |    88 |
|  4 |        1 | 小米   | F      |    73 |
|  5 |        2 | 小牛   | F      |    77 |
|  6 |        2 | 小牛   | M      |    77 |
|  7 |        2 | 小牛   | M      |    77 |
|  8 |        3 | 小新   | F      |    91 |
|  9 |        3 | 小王   | M      |    89 |
| 10 |        3 | 小丽   | F      |    85 |
| 11 |        5 | 新生   | M      |    88 |
| 12 |        2 | 大牛   | M      |    80 |
| 13 |        1 | 大宝   | M      |    87 |
| 14 |        2 | 二宝   | M      |    81 |
+----+----------+--------+--------+-------+
14 rows in set (0.00 sec)

4. 小心！！！
！！！UPDATE语句可以没有WHERE条件，此时会更新整个表的全部记录。
例。
mysql> UPDATE students SET score=60;
Query OK, 14 rows affected (0.08 sec)
Rows matched: 14  Changed: 14  Warnings: 0
mysql> SELECT * FROM students;
+----+----------+--------+--------+-------+
| id | class_id | name   | gender | score |
+----+----------+--------+--------+-------+
|  1 |        1 | 大牛   | M      |    60 |
|  2 |        1 | 小红   | F      |    60 |
|  3 |        1 | 小军   | M      |    60 |
|  4 |        1 | 小米   | F      |    60 |
|  5 |        2 | 小牛   | F      |    60 |
|  6 |        2 | 小牛   | M      |    60 |
|  7 |        2 | 小牛   | M      |    60 |
|  8 |        3 | 小新   | F      |    60 |
|  9 |        3 | 小王   | M      |    60 |
| 10 |        3 | 小丽   | F      |    60 |
| 11 |        5 | 新生   | M      |    60 |
| 12 |        2 | 大牛   | M      |    60 |
| 13 |        1 | 大宝   | M      |    60 |
| 14 |        2 | 二宝   | M      |    60 |
+----+----------+--------+--------+-------+
14 rows in set (0.00 sec)
// 所以，在执行UPDATE语句时要非常小心，最好先用SELECT语句来测试WHERE条件是否筛选出了期望的记录集，然后再用UPDATE更新。

