管理MySQL.

1. MySQL Client: 一个命令行客户端，可以通过MySQL Client登录MySQL，然后，输入SQL语句并执行。

【安装完MySQL后，除了MySQL Server，即真正的MySQL服务器外，还附赠一个MySQL Client程序】

MySQL Client的可执行程序是mysql，MySQL Server的可执行程序是mysqld

2. MySQL Client和MySQL Server的关系如下：
					SQL
│ MySQL Client │───────────>│ MySQL Server │
					TCP
					
NOTE. 在MySQL Client中输入的语句，通过TCP连接 发送到MySQL Server。默认端口是3306，
		即，如果发送到本机MySQL Server，地址就是127.0.0.1:3306。

NOTE. 也可只安装MySQL Client，然后，连接到远程MySQL Server。
		假设远程MySQL Server的IP地址是10.0.1.99，
		那么，就使用-h制定IP或域名：
		语句：mysql -h 10.0.1.99 -u root -p
		
NOTE. 命令行程序mysql实际上是MySQL客户端，真正的MySQL服务器程序是mysqld，在后台运行。

3. 管理工具：可视化图形界面，MySQL Workbench.

mysql workbench可用可视化的方式 查询、创建、修改 database的表。
但mysql workbench终归是一个图形客户端，它对MySQL的操作 仍然是 发送SQL语句并执行。

NOTE，本质上，MySQL Workbench和MySQL Client命令行都是客户端，和MySQL交互，唯一的接口就是SQL。
		因此，MySQL提供了大量的SQL语句用于管理。
		
NOTE，虽可用MySQL Workbench图形界面来直接管理MySQL，但很多时候，通过SSH远程连接时，只能使用SQL命令，
		所以，了解并掌握常用的SQL管理操作是必须的。
		

4. 数据库。
一个运行MySQL的服务器上，实际上可以创建 多个database。
例子。查看数据库。
mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| sys                |
| test               |
| wang               |
+--------------------+
6 rows in set (0.14 sec)
# 其中，information_schema、mysql、performance_schema和sys是系统库，不要去改动它们。其他的是用户创建的数据库。

5. 创建数据库：要创建一个新数据库，使用命令：CREATE DATABASE <数据库名>;
	删除数据库：要删除一个数据库，使用命令：DRIP DATABASE <数据库名>;
	注意：删除一个数据库将导致该数据库的所有表全部被删除。

6. 对一个数据库进行操作时，要首先将其切换为当前数据库：USE <数据库名>;

7. 表。
#############################################################
	列出当前数据库的所有表，使用命令：SHOW TABLES;
#############################################################
mysql> SHOW TABLES;
+----------------+
| Tables_in_wang |
+----------------+
| classes        |
| event          |
| pet            |
| students       |
+----------------+
4 rows in set (0.07 sec)
#############################################################
	要查看一个表的结构，使用命令：DESC students;
#############################################################
mysql> DESC students;
+----------+--------------+------+-----+---------+----------------+
| Field    | Type         | Null | Key | Default | Extra          |
+----------+--------------+------+-----+---------+----------------+
| id       | bigint(20)   | NO   | PRI | NULL    | auto_increment |
| class_id | bigint(20)   | NO   |     | NULL    |                |
| name     | varchar(100) | NO   |     | NULL    |                |
| gender   | varchar(1)   | NO   |     | NULL    |                |
| score    | int(11)      | NO   |     | NULL    |                |
+----------+--------------+------+-----+---------+----------------+
5 rows in set (0.08 sec)
#############################################################
	使用以下命令查看创建表的SQL语句：
#############################################################
mysql>  SHOW CREATE TABLE students;
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Table    | Create Table                                                                                                                                                                                                                                                                   |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| students | CREATE TABLE `students` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `class_id` bigint(20) NOT NULL,
  `name` varchar(100) NOT NULL,
  `gender` varchar(1) NOT NULL,
  `score` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.05 sec)
#############################################################
	删除表：DROP TABLE <表名>;
#############################################################

#############################################################
	修改表：ALTER TABLE students ADD COLUMN birth VARCHAR(10) NOT NULL;
修改birth列，例如把列名改为birthday，类型改为VARCHAR(20)：
#############################################################

#############################################################
	修改birth列，例如把列名改为birthday，类型改为VARCHAR(20)：
ALTER TABLE students CHANGE COLUMN birth birthday VARCHAR(20) NOT NULL;

#############################################################
	删除列，使用：ALTER TABLE students DROP COLUMN birthday;
#############################################################

8. 退出MySQL：EXIT
	注意EXIT仅仅断开了客户端和服务器的连接，MySQL服务器仍然继续运行。
