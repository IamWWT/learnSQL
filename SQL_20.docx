事务，Read Uncommited。

############################################
SQL标准定义了4种隔离级别，分别对应可能出现的数据不一致的情况：
############################################
Isolation Level		脏读（Dirty Read）	不可重复读（Non Repeatable Read）	幻读（Phantom Read）
Read Uncommitted	Yes					Yes									Yes
Read Committed		-					Yes									Yes
Repeatable Read		-					-									Yes
Serializable		-					-									-

隔离级别最低的一种事务级别。
#########
这种隔离级别下，一个事务 会读到 另一个事务 更新后但未提交 的数据，
如果另一个事务 回滚 ，那么 当前事务 读到的数据就是脏数据，这就是 脏读（Dirty Read）。
#########

例子。
step 1.
准备好students表的数据，该表仅一行记录：
mysql> select * from students;
+----+-------+
| id | name  |
+----+-------+
|  1 | Alice |
+----+-------+
1 row in set (0.00 sec)

step 2.
分别开启两个MySQL客户端连接，按顺序依次执行事务A和事务B：
时刻	事务A															事务B
1	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
2	BEGIN;												BEGIN;
3	UPDATE students SET name = 'Bob' WHERE id = 1;	
4														SELECT * FROM students WHERE id = 1;
5	ROLLBACK;	
6														SELECT * FROM students WHERE id = 1;
7														COMMIT;

查看：https://www.liaoxuefeng.com/wiki/1177760294764384/1219071817284064
  
说明：
当事务A执行完第3步时，它更新了id=1的记录，但并未提交，
而事务B在第4步读取到的数据就是未提交的数据。Bob
随后，事务A在第5步进行了回滚，事务B再次读取id=1的记录，Alice
发现和上一次读取到的数据不一致，这就是脏读。

可见，在Read Uncommitted隔离级别下，
一个事务可能读取到另一个事务更新但未提交的数据，这个数据有可能是脏数据。
