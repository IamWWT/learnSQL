多表查询。原始表信息在SQL_6中可看到。

使用多表查询可以获取M x N行记录；
多表查询的结果集可能非常巨大，要小心使用。

1. 语法：SELECT * FROM <表1> <表2>。
同时从students表和classes表的“乘积”，即查询数据。
它是students表和classes表的“乘积”，即students表的每一行与classes表的每一行都两两拼在一起返回。
结果集的列数是students表和classes表的列数之和，行数是students表和classes表的行数之积。
这种多表查询又称笛卡尔查询。

用笛卡尔查询时要非常小心，由于结果集是目标表的行数乘积，对两个各自有1万行记录的表进行笛卡尔查询将返回1亿条记录。

例。
mysql> SELECT * FROM students, classes;
+----+----------+--------+--------+-------+----+--------+
| id | class_id | name   | gender | score | id | name   |
+----+----------+--------+--------+-------+----+--------+
|  1 |        1 | 小明   | M      |    90 |  1 | 一班   |
|  1 |        1 | 小明   | M      |    90 |  2 | 二班   |
|  1 |        1 | 小明   | M      |    90 |  3 | 三班   |
|  1 |        1 | 小明   | M      |    90 |  4 | 四班   |
|  2 |        1 | 小红   | F      |    95 |  1 | 一班   |
|  2 |        1 | 小红   | F      |    95 |  2 | 二班   |
|  2 |        1 | 小红   | F      |    95 |  3 | 三班   |
|  2 |        1 | 小红   | F      |    95 |  4 | 四班   |
|  3 |        1 | 小军   | M      |    88 |  1 | 一班   |
|  3 |        1 | 小军   | M      |    88 |  2 | 二班   |
|  3 |        1 | 小军   | M      |    88 |  3 | 三班   |
|  3 |        1 | 小军   | M      |    88 |  4 | 四班   |
|  4 |        1 | 小米   | F      |    73 |  1 | 一班   |
|  4 |        1 | 小米   | F      |    73 |  2 | 二班   |
|  4 |        1 | 小米   | F      |    73 |  3 | 三班   |
|  4 |        1 | 小米   | F      |    73 |  4 | 四班   |
|  5 |        2 | 小白   | F      |    81 |  1 | 一班   |
|  5 |        2 | 小白   | F      |    81 |  2 | 二班   |
|  5 |        2 | 小白   | F      |    81 |  3 | 三班   |
|  5 |        2 | 小白   | F      |    81 |  4 | 四班   |
|  6 |        2 | 小兵   | M      |    55 |  1 | 一班   |
|  6 |        2 | 小兵   | M      |    55 |  2 | 二班   |
|  6 |        2 | 小兵   | M      |    55 |  3 | 三班   |
|  6 |        2 | 小兵   | M      |    55 |  4 | 四班   |
|  7 |        2 | 小林   | M      |    85 |  1 | 一班   |
|  7 |        2 | 小林   | M      |    85 |  2 | 二班   |
|  7 |        2 | 小林   | M      |    85 |  3 | 三班   |
|  7 |        2 | 小林   | M      |    85 |  4 | 四班   |
|  8 |        3 | 小新   | F      |    91 |  1 | 一班   |
|  8 |        3 | 小新   | F      |    91 |  2 | 二班   |
|  8 |        3 | 小新   | F      |    91 |  3 | 三班   |
|  8 |        3 | 小新   | F      |    91 |  4 | 四班   |
|  9 |        3 | 小王   | M      |    89 |  1 | 一班   |
|  9 |        3 | 小王   | M      |    89 |  2 | 二班   |
|  9 |        3 | 小王   | M      |    89 |  3 | 三班   |
|  9 |        3 | 小王   | M      |    89 |  4 | 四班   |
| 10 |        3 | 小丽   | F      |    85 |  1 | 一班   |
| 10 |        3 | 小丽   | F      |    85 |  2 | 二班   |
| 10 |        3 | 小丽   | F      |    85 |  3 | 三班   |
| 10 |        3 | 小丽   | F      |    85 |  4 | 四班   |
+----+----------+--------+--------+-------+----+--------+

2. 观察上表。
注意到了，上述查询的结果集有两列id和两列name，两列id是因为其中一列是students表的id，而另一列是classes表的id，但是在结果集中，不好区分。两列name同理。
要解决这个问题，我们仍然可以利用投影查询的“设置列的别名”来给两个表各自的id和name列起别名。

例。
mysql> SELECT
    ->     students.id sid, --注意，多表查询时，要使用【表名.列名】这样的方式来【引用列和设置别名】，
    ->     students.name,
    ->     students.gender,
    ->     students.score,
    ->     classes.id cid,
    ->     classes.name cname
    -> FROM students, classes;
+-----+--------+--------+-------+-----+--------+
| sid | name   | gender | score | cid | cname  |
+-----+--------+--------+-------+-----+--------+
|   1 | 小明   | M      |    90 |   1 | 一班   |
|   1 | 小明   | M      |    90 |   2 | 二班   |
|   1 | 小明   | M      |    90 |   3 | 三班   |
|   1 | 小明   | M      |    90 |   4 | 四班   |
|   2 | 小红   | F      |    95 |   1 | 一班   |
|   2 | 小红   | F      |    95 |   2 | 二班   |
|   2 | 小红   | F      |    95 |   3 | 三班   |
|   2 | 小红   | F      |    95 |   4 | 四班   |
|   3 | 小军   | M      |    88 |   1 | 一班   |
|   3 | 小军   | M      |    88 |   2 | 二班   |
|   3 | 小军   | M      |    88 |   3 | 三班   |
|   3 | 小军   | M      |    88 |   4 | 四班   |
|   4 | 小米   | F      |    73 |   1 | 一班   |
|   4 | 小米   | F      |    73 |   2 | 二班   |
|   4 | 小米   | F      |    73 |   3 | 三班   |
|   4 | 小米   | F      |    73 |   4 | 四班   |
|   5 | 小白   | F      |    81 |   1 | 一班   |
|   5 | 小白   | F      |    81 |   2 | 二班   |
|   5 | 小白   | F      |    81 |   3 | 三班   |
|   5 | 小白   | F      |    81 |   4 | 四班   |
|   6 | 小兵   | M      |    55 |   1 | 一班   |
|   6 | 小兵   | M      |    55 |   2 | 二班   |
|   6 | 小兵   | M      |    55 |   3 | 三班   |
|   6 | 小兵   | M      |    55 |   4 | 四班   |
|   7 | 小林   | M      |    85 |   1 | 一班   |
|   7 | 小林   | M      |    85 |   2 | 二班   |
|   7 | 小林   | M      |    85 |   3 | 三班   |
|   7 | 小林   | M      |    85 |   4 | 四班   |
|   8 | 小新   | F      |    91 |   1 | 一班   |
|   8 | 小新   | F      |    91 |   2 | 二班   |
|   8 | 小新   | F      |    91 |   3 | 三班   |
|   8 | 小新   | F      |    91 |   4 | 四班   |
|   9 | 小王   | M      |    89 |   1 | 一班   |
|   9 | 小王   | M      |    89 |   2 | 二班   |
|   9 | 小王   | M      |    89 |   3 | 三班   |
|   9 | 小王   | M      |    89 |   4 | 四班   |
|  10 | 小丽   | F      |    85 |   1 | 一班   |
|  10 | 小丽   | F      |    85 |   2 | 二班   |
|  10 | 小丽   | F      |    85 |   3 | 三班   |
|  10 | 小丽   | F      |    85 |   4 | 四班   |
+-----+--------+--------+-------+-----+--------+
40 rows in set (0.00 sec)

3. FROM子句给表设置别名的语法是FROM <表名1> <别名1>, <表名2> <别名2>。 
【表名.列名】这种方式列举两个表的所有列实在是很麻烦，所以SQL还允许给表设置一个别名，让我们在投影查询中引用起来稍微简洁一点：
例。
mysql> SELECT
    ->     s.id sid,
    ->     s.name,
    ->     s.gender,
    ->     s.score,
    ->     c.id cid,
    ->     c.name cname
    -> FROM students s, classes c;  --- 和上面语句一样的效果，不过更简洁了。
+-----+--------+--------+-------+-----+--------+
| sid | name   | gender | score | cid | cname  |
+-----+--------+--------+-------+-----+--------+
|   1 | 小明   | M      |    90 |   1 | 一班   |
|   1 | 小明   | M      |    90 |   2 | 二班   |
|   1 | 小明   | M      |    90 |   3 | 三班   |
|   1 | 小明   | M      |    90 |   4 | 四班   |
|   2 | 小红   | F      |    95 |   1 | 一班   |
|   2 | 小红   | F      |    95 |   2 | 二班   |
|   2 | 小红   | F      |    95 |   3 | 三班   |
|   2 | 小红   | F      |    95 |   4 | 四班   |
|   3 | 小军   | M      |    88 |   1 | 一班   |
|   3 | 小军   | M      |    88 |   2 | 二班   |
|   3 | 小军   | M      |    88 |   3 | 三班   |
|   3 | 小军   | M      |    88 |   4 | 四班   |
|   4 | 小米   | F      |    73 |   1 | 一班   |
|   4 | 小米   | F      |    73 |   2 | 二班   |
|   4 | 小米   | F      |    73 |   3 | 三班   |
|   4 | 小米   | F      |    73 |   4 | 四班   |
|   5 | 小白   | F      |    81 |   1 | 一班   |
|   5 | 小白   | F      |    81 |   2 | 二班   |
|   5 | 小白   | F      |    81 |   3 | 三班   |
|   5 | 小白   | F      |    81 |   4 | 四班   |
|   6 | 小兵   | M      |    55 |   1 | 一班   |
|   6 | 小兵   | M      |    55 |   2 | 二班   |
|   6 | 小兵   | M      |    55 |   3 | 三班   |
|   6 | 小兵   | M      |    55 |   4 | 四班   |
|   7 | 小林   | M      |    85 |   1 | 一班   |
|   7 | 小林   | M      |    85 |   2 | 二班   |
|   7 | 小林   | M      |    85 |   3 | 三班   |
|   7 | 小林   | M      |    85 |   4 | 四班   |
|   8 | 小新   | F      |    91 |   1 | 一班   |
|   8 | 小新   | F      |    91 |   2 | 二班   |
|   8 | 小新   | F      |    91 |   3 | 三班   |
|   8 | 小新   | F      |    91 |   4 | 四班   |
|   9 | 小王   | M      |    89 |   1 | 一班   |
|   9 | 小王   | M      |    89 |   2 | 二班   |
|   9 | 小王   | M      |    89 |   3 | 三班   |
|   9 | 小王   | M      |    89 |   4 | 四班   |
|  10 | 小丽   | F      |    85 |   1 | 一班   |
|  10 | 小丽   | F      |    85 |   2 | 二班   |
|  10 | 小丽   | F      |    85 |   3 | 三班   |
|  10 | 小丽   | F      |    85 |   4 | 四班   |
+-----+--------+--------+-------+-----+--------+
40 rows in set (0.00 sec)


4. 多表查询+where条件查询
mysql> SELECT
    ->     s.id sid,
    ->     s.name,
    ->     s.gender,
    ->     s.score,
    ->     c.id cid,
    ->     c.name cname
    -> FROM students s, classes c
    -> WHERE s.gender = 'M' AND c.id = 1;
+-----+--------+--------+-------+-----+--------+
| sid | name   | gender | score | cid | cname  |
+-----+--------+--------+-------+-----+--------+
|   1 | 小明   | M      |    90 |   1 | 一班   |
|   3 | 小军   | M      |    88 |   1 | 一班   |
|   6 | 小兵   | M      |    55 |   1 | 一班   |
|   7 | 小林   | M      |    85 |   1 | 一班   |
|   9 | 小王   | M      |    89 |   1 | 一班   |
+-----+--------+--------+-------+-----+--------+
5 rows in set (0.00 sec)