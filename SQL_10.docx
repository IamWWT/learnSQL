分页查询。
目的：数据量太大，分页显示。需要分页功能。

分页功能描述：实现分页功能，实际上就是从结果集中显示第1~100条记录作为第1页，显示第101~200条记录作为第2页，以此类推。


1. LIMIT <M> OFFSET <N> 子句实现分页。分页实际上就是从结果集中“截取”出第M~N条记录。
教例。
投影查询+排序。
mysql> SELECT id, name, gender, score FROM students ORDER BY score DESC;
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
|  2 | 小红   | F      |    95 |
|  8 | 小新   | F      |    91 |
|  1 | 小明   | M      |    90 |
|  9 | 小王   | M      |    89 |
|  3 | 小军   | M      |    88 |
|  7 | 小林   | M      |    85 |
| 10 | 小丽   | F      |    85 |
|  5 | 小白   | F      |    81 |
|  4 | 小米   | F      |    73 |
|  6 | 小兵   | M      |    55 |
+----+--------+--------+-------+
10 rows in set (0.00 sec)
总页数==10//3+1=4页。------------------------------------------------------------------------------------------------------
结果分页：查询第一页。------------------------------------------------------------------------------------------------------
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 3 OFFSET 0;   ----表示：对结果集从0号记录开始，最多取3条。注意SQL记录集的索引从0开始。
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
|  2 | 小红   | F      |    95 |
|  8 | 小新   | F      |    91 |
|  1 | 小明   | M      |    90 |
+----+--------+--------+-------+
3 rows in set (0.00 sec)
结果分页2: 查询第二页。------------------------------------------------------------------------------------------------------
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 3 OFFSET 3;  ----表示：从3号记录始，只需要“跳过”头3（OFFSET）条记录，最多取3(LIMIT)条。
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
|  9 | 小王   | M      |    89 |
|  3 | 小军   | M      |    88 |
| 10 | 小丽   | F      |    85 |
+----+--------+--------+-------+
3 rows in set (0.00 sec)
结果分页：查询第三页。------------------------------------------------------------------------------------------------------
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 3 OFFSET 6;
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
| 10 | 小丽   | F      |    85 |
|  5 | 小白   | F      |    81 |
|  4 | 小米   | F      |    73 |
+----+--------+--------+-------+
3 rows in set (0.00 sec)
结果分页4：查询第四页。------------------------------------------------------------------------------------------------------
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 3 OFFSET 9;
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
|  6 | 小兵   | M      |    55 |
+----+--------+--------+-------+
1 row in set (0.00 sec)

2. OFFSET超过了查询的最大数量并不会报错，而是得到一个空的结果集。
教例。
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 3 OFFSET 20;
Empty set (0.00 sec)

3. 注意
-OFFSET是可选的，如果只写LIMIT 15，那么相当于LIMIT 15 OFFSET 0。

教例。
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 15;  ---- 表示从第0个开始，列出最多15个记录。
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
|  2 | 小红   | F      |    95 |
|  8 | 小新   | F      |    91 |
|  1 | 小明   | M      |    90 |
|  9 | 小王   | M      |    89 |
|  3 | 小军   | M      |    88 |
|  7 | 小林   | M      |    85 |
| 10 | 小丽   | F      |    85 |
|  5 | 小白   | F      |    81 |
|  4 | 小米   | F      |    73 |
|  6 | 小兵   | M      |    55 |
+----+--------+--------+-------+
10 rows in set (0.00 sec)

4. 在MySQL中，LIMIT 15 OFFSET 30还可以简写成LIMIT 30, 15。
教例。
mysql> SELECT id, name, gender, score
    -> FROM students
    -> ORDER BY score DESC
    -> LIMIT 9,3; --------------------------注意先是OFFSET再次是LIMIT
+----+--------+--------+-------+
| id | name   | gender | score |
+----+--------+--------+-------+
|  6 | 小兵   | M      |    55 |
+----+--------+--------+-------+
1 row in set (0.00 sec)

5. 使用LIMIT <M> OFFSET <N>分页时，随着N越来越大，查询效率也-会越来越低。

